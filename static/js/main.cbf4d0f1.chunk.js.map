{"version":3,"sources":["logo.png","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","button","margin","spacing","App","classes","useTheme","useState","selectedGroup","setSelectedGroupd","className","style","backgroundColor","background","Box","bgcolor","palette","primary","main","boxShadow","shadows","display","alignItems","justifyContent","paddingY","marginBottom","marginRight","height","width","src","logo","alt","Typography","variant","flexDirection","contrastText","padding","borderRadius","onSubmit","event","preventDefault","window","open","Autocomplete","id","options","data","telegram_bots","getOptionLabel","option","name","renderInput","params","TextField","label","onChange","_","val","chat_id","Button","color","startIcon","disabled","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","dark","light","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","console","log"],"mappings":"2mBAAe,MAA0B,iC,iBCgBnCA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,OAAQH,EAAMI,QAAQ,SAiGbC,MA5Ff,WACE,IAAMC,EAAUR,IACVE,EAAQO,cACd,EAA2CC,mBAAS,IAApD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,OACE,sBACEC,UAAU,MACVC,MAAO,CACLC,gBAAiB,UACjBC,WAAY,oDAJhB,UAQE,eAACC,EAAA,EAAD,CACEC,QAAShB,EAAMiB,QAAQC,QAAQC,KAC/BC,UAAWpB,EAAMqB,QAAQ,IACzBC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,SAAUzB,EAAMI,QAAQ,IACxBsB,aAAc1B,EAAMI,QAAQ,GAP9B,UASE,cAACW,EAAA,EAAD,CAAKY,YAAa3B,EAAMI,QAAQ,IAAhC,SACE,qBAAKwB,OAAO,QAAQC,MAAM,QAAQC,IAAKC,EAAMC,IAAI,qBAEnD,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAKF,cAACnB,EAAA,EAAD,CAAKO,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAvD,SACE,eAACT,EAAA,EAAD,CACEO,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfW,cAAc,SACdf,UAAWpB,EAAMqB,QAAQ,GACzBL,QAAShB,EAAMiB,QAAQC,QAAQkB,aAC/BC,QAASrC,EAAMI,QAAQ,IACvBkC,aAAc,EARhB,UAUE,eAACvB,EAAA,EAAD,CAAKW,aAAc1B,EAAMI,QAAQ,IAAjC,UACE,cAAC6B,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAApB,mCAEF,cAACnB,EAAA,EAAD,UACE,uBACEwB,SAAU,SAACC,GACTA,EAAMC,iBACNC,OAAOC,KAAP,uBAA4BlC,GAAiB,WAHjD,UAME,cAACM,EAAA,EAAD,CAAKW,aAAc1B,EAAMI,QAAQ,IAAjC,SACE,cAACwC,EAAA,EAAD,CACEC,GAAG,gBACHC,QAASC,EAAKC,cACdC,eAAgB,SAACC,GAAD,OAAYA,EAAOC,MACnCvC,MAAO,CAAEiB,MAAO,KAChBuB,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAM,OAAOrB,QAAQ,eAE9CsB,SAAU,SAACC,EAAGC,GACNA,GAASA,EAAIC,SACjBjD,EAAkBgD,EAAIC,cAK9B,eAACC,EAAA,EAAD,CACE1B,QAAQ,YACR2B,MAAM,YACNlD,UAAWL,EAAQJ,OACnB4D,UAAW,cAAC,IAAD,IACXC,UAAWtD,EACXuD,KAAK,SANP,kBAQQvD,eAShB,cAACM,EAAA,EAAD,Q,0BChGSkD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCUClE,EAjBM0E,YAAe,CAClCzD,QAAS,CACPC,QAAS,CACPC,KAAM,UACNwD,KAAM,UACNC,MAAO,UACPxC,aAAc,QAEhByC,UAAW,CACT1D,KAAM,UACNwD,KAAM,UACNC,MAAO,UACPxC,aAAc,WCLpB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAejF,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJkF,SAASC,eAAe,SAM1BlB,EAAgBmB,QAAQC,O","file":"static/js/main.cbf4d0f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c0e127e1.png\";","import \"./App.scss\";\n\nimport React, { useState } from \"react\";\nimport { createStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Theme } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport data from \"./data.json\";\nimport logo from \"./logo.png\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [selectedGroup, setSelectedGroupd] = useState(\"\");\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundColor: \"#f5f186\",\n        background: \"linear-gradient(315deg, #f5f186 0%, #9dfbc8 74%)\",\n      }}\n    >\n      {/* Site Header START*/}\n      <Box\n        bgcolor={theme.palette.primary.main}\n        boxShadow={theme.shadows[10]}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        paddingY={theme.spacing(0.2)}\n        marginBottom={theme.spacing(1)}\n      >\n        <Box marginRight={theme.spacing(0.2)}>\n          <img height=\"100px\" width=\"100px\" src={logo} alt=\"Cowinhood logo\" />\n        </Box>\n        <Typography variant=\"h3\">Cowinhood</Typography>\n      </Box>\n      {/* Site Header END*/}\n\n      {/* Site Body START*/}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\"\n          boxShadow={theme.shadows[1]}\n          bgcolor={theme.palette.primary.contrastText}\n          padding={theme.spacing(0.5)}\n          borderRadius={8}\n        >\n          <Box marginBottom={theme.spacing(0.5)}>\n            <Typography variant=\"h4\">Telegram Alerts</Typography>\n            <Typography variant=\"subtitle1\">(Age group: 18-44)</Typography>\n          </Box>\n          <Box>\n            <form\n              onSubmit={(event) => {\n                event.preventDefault();\n                window.open(`https://t.me/${selectedGroup}`, \"_blank\"); //to open new page\n              }}\n            >\n              <Box marginBottom={theme.spacing(0.5)}>\n                <Autocomplete\n                  id=\"search-cities\"\n                  options={data.telegram_bots}\n                  getOptionLabel={(option) => option.name}\n                  style={{ width: 300 }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"City\" variant=\"outlined\" />\n                  )}\n                  onChange={(_, val) => {\n                    if (!!val && !!val.chat_id) {\n                      setSelectedGroupd(val.chat_id);\n                    }\n                  }}\n                />\n              </Box>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<TelegramIcon />}\n                disabled={!selectedGroup}\n                type=\"submit\"\n              >\n                Join {selectedGroup}\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n      {/* Site Body END*/}\n\n      {/* Site Footer START*/}\n      <Box></Box>\n      {/* Site Footer END*/}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Theme, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme: Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#aff1da\",\n      dark: \"#6d8e46\",\n      light: \"#afd683\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      main: \"#ffd600\",\n      dark: \"#b29500\",\n      light: \"#ffde33\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nexport default theme;\n","import \"./index.scss\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}